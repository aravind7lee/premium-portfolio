{
  "version": 3,
  "sources": ["file:///D:/PortfolioC/premium-portfolio/netlify/functions/contact.js"],
  "sourceRoot": "C:/Users/dell/AppData/Local/Temp/tmp-13760-AZBS71qoC8xn",
  "sourcesContent": ["// netlify/functions/contact.js\r\n// Netlify serverless function (ESM style) that forwards form submissions to Web3Forms\r\n// Ensure your project package.json sets \"type\": \"module\" (you already have it).\r\n// For local testing with netlify dev, set WEB3FORMS_ACCESS_KEY in your .env file.\r\n\r\nconst WEB3FORMS_ENDPOINT = 'https://api.web3forms.com/submit';\r\n\r\nexport const handler = async (event, context) => {\r\n  if (event.httpMethod !== 'POST') {\r\n    return {\r\n      statusCode: 405,\r\n      headers: { Allow: 'POST', 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ error: 'Method not allowed' })\r\n    };\r\n  }\r\n\r\n  const accessKey = process.env.WEB3FORMS_ACCESS_KEY;\r\n  if (!accessKey) {\r\n    console.error('Missing WEB3FORMS_ACCESS_KEY env var.');\r\n    return {\r\n      statusCode: 500,\r\n      body: JSON.stringify({ error: 'Server misconfigured' })\r\n    };\r\n  }\r\n\r\n  let payload;\r\n  try {\r\n    payload = JSON.parse(event.body || '{}');\r\n  } catch (err) {\r\n    console.error('Invalid JSON body', err);\r\n    return { statusCode: 400, body: JSON.stringify({ error: 'Invalid JSON' }) };\r\n  }\r\n\r\n  const { name, email, subject, message } = payload;\r\n\r\n  if (!name || !email || !message) {\r\n    return { statusCode: 400, body: JSON.stringify({ error: 'Missing required fields' }) };\r\n  }\r\n\r\n  // forward to Web3Forms\r\n  const body = {\r\n    access_key: accessKey,\r\n    name,\r\n    email,\r\n    subject: subject || '',\r\n    message,\r\n    source: 'portfolio-contact-form'\r\n  };\r\n\r\n  try {\r\n    // use global fetch available in Node 18+ (Netlify runtime)\r\n    const res = await fetch(WEB3FORMS_ENDPOINT, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(body)\r\n    });\r\n\r\n    const resJson = await res.json().catch(() => ({}));\r\n    if (!res.ok) {\r\n      console.error('Web3Forms returned error', res.status, resJson);\r\n      return { statusCode: 500, body: JSON.stringify({ error: 'Failed to send', details: resJson }) };\r\n    }\r\n\r\n    // success\r\n    return { statusCode: 200, body: JSON.stringify({ ok: true, res: resJson }) };\r\n  } catch (err) {\r\n    console.error('Error forwarding to Web3Forms', err);\r\n    return { statusCode: 500, body: JSON.stringify({ error: 'Server error' }) };\r\n  }\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,IAAM,qBAAqB;AAEpB,IAAM,UAAU,OAAO,OAAO,YAAY;AAC/C,MAAI,MAAM,eAAe,QAAQ;AAC/B,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS,EAAE,OAAO,QAAQ,gBAAgB,mBAAmB;AAAA,MAC7D,MAAM,KAAK,UAAU,EAAE,OAAO,qBAAqB,CAAC;AAAA,IACtD;AAAA,EACF;AAEA,QAAM,YAAY,QAAQ,IAAI;AAC9B,MAAI,CAAC,WAAW;AACd,YAAQ,MAAM,uCAAuC;AACrD,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,OAAO,uBAAuB,CAAC;AAAA,IACxD;AAAA,EACF;AAEA,MAAI;AACJ,MAAI;AACF,cAAU,KAAK,MAAM,MAAM,QAAQ,IAAI;AAAA,EACzC,SAAS,KAAK;AACZ,YAAQ,MAAM,qBAAqB,GAAG;AACtC,WAAO,EAAE,YAAY,KAAK,MAAM,KAAK,UAAU,EAAE,OAAO,eAAe,CAAC,EAAE;AAAA,EAC5E;AAEA,QAAM,EAAE,MAAM,OAAO,SAAS,QAAQ,IAAI;AAE1C,MAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS;AAC/B,WAAO,EAAE,YAAY,KAAK,MAAM,KAAK,UAAU,EAAE,OAAO,0BAA0B,CAAC,EAAE;AAAA,EACvF;AAGA,QAAM,OAAO;AAAA,IACX,YAAY;AAAA,IACZ;AAAA,IACA;AAAA,IACA,SAAS,WAAW;AAAA,IACpB;AAAA,IACA,QAAQ;AAAA,EACV;AAEA,MAAI;AAEF,UAAM,MAAM,MAAM,MAAM,oBAAoB;AAAA,MAC1C,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAC9C,MAAM,KAAK,UAAU,IAAI;AAAA,IAC3B,CAAC;AAED,UAAM,UAAU,MAAM,IAAI,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACjD,QAAI,CAAC,IAAI,IAAI;AACX,cAAQ,MAAM,4BAA4B,IAAI,QAAQ,OAAO;AAC7D,aAAO,EAAE,YAAY,KAAK,MAAM,KAAK,UAAU,EAAE,OAAO,kBAAkB,SAAS,QAAQ,CAAC,EAAE;AAAA,IAChG;AAGA,WAAO,EAAE,YAAY,KAAK,MAAM,KAAK,UAAU,EAAE,IAAI,MAAM,KAAK,QAAQ,CAAC,EAAE;AAAA,EAC7E,SAAS,KAAK;AACZ,YAAQ,MAAM,iCAAiC,GAAG;AAClD,WAAO,EAAE,YAAY,KAAK,MAAM,KAAK,UAAU,EAAE,OAAO,eAAe,CAAC,EAAE;AAAA,EAC5E;AACF;",
  "names": []
}
